#!/bin/bash
# evemedb

# Stop on errors
# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail

# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

# Parse argument.  $1 is the first argument
case $1 in
  "create")
    [ -d "var/uploads" ] && echo "Error: database already exists" || (mkdir -p var/uploads && echo "+ mkdir -p var/uploads")
    sqlite3 var/eveme.sqlite3 < sql/schema.sql && echo "+ sqlite3 var/eveme.sqlite3 < sql/schema.sql"
    # sqlite3 var/eveme.sqlite3 < sql/data.sql && echo "+ sqlite3 var/eveme.sqlite3 < sql/data.sql"
    # cp sql/uploads/* var/uploads/ && echo "+ cp sql/uploads/* var/uploads/"
    ;;

  "destroy")
    rm -rf var/eveme.sqlite3 var/uploads && echo "+ rm -rf var/eveme.sqlite3 var/uploads"
    ;;

  "reset")
    rm -rf var/eveme.sqlite3 var/uploads && echo "+ rm -rf var/eveme.sqlite3 var/uploads"
    [ -d "var/uploads" ] && echo "Error: database already exists" || (mkdir -p var/uploads && echo "+ mkdir -p var/uploads")
    sqlite3 var/eveme.sqlite3 < sql/schema.sql && echo "+ sqlite3 var/eveme.sqlite3 < sql/schema.sql"
    # sqlite3 var/eveme.sqlite3 < sql/data.sql && echo "+ sqlite3 var/eveme.sqlite3 < sql/data.sql"
    # cp sql/uploads/* var/uploads/ && echo "+ cp sql/uploads/* var/uploads/"
    ;;

  "dump")
	sqlite3 -batch -line var/eveme.sqlite3 'SELECT * FROM users'
  printf "\n"
    ;;
  *)
    usage
    exit 1
    ;;
esac
